{"version":3,"sources":["components/Counter/index.jsx","components/CounterState/index.jsx","components/CounterValue/index.jsx","containers/CounterContainer/index.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["MAX_VALUE","process","Counter","initialValue","setIsSaving","useState","value","setValue","timerID","setTimerID","inputField","useRef","useEffect","current","style","width","toString","length","onValueChange","newVal","isNaN","clearTimeout","setTimeout","axios","put","sentienta","then","className","onClick","type","ref","onChange","e","parseInt","target","CounterState","isSaving","CounterValue","CounterContainer","setInitialValue","get","res","data","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uXAIMA,EAAYC,OA0CHC,EAvCC,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,YAC/B,EAA0BC,qBAA1B,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,MAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACMC,EAAaC,mBAEnBC,qBAAU,WACRF,EAAWG,QAAQC,MAAMC,OAAS,GAAKf,EAAUgB,WAAWC,QAAQD,WAAa,KACjFT,EAASJ,KACR,CAACA,IAEJ,IAAMe,EAAgB,SAAAC,GACjBC,MAAMD,KAASA,EAAS,GACxBA,IAAWb,GAASa,GAAUnB,IAC/BqB,aAAab,GACbJ,GAAY,GACZK,EAAWa,YAAW,WACpBC,IAAMC,IAlBC,qEAkBW,CAAEC,UAAWN,IAAUO,MAAK,kBAAMtB,GAAY,QAC/D,MACHG,EAASY,KAIb,OACE,sBAAKQ,UAAU,UAAf,UACE,wBAAQA,UAAU,YAAYC,QAAS,kBAAMV,EAAcZ,EAAQ,IAAnE,eAEA,uBAAOuB,KAAK,OACVC,IAAKpB,EACLJ,MAAOA,EACPyB,SAAU,SAAAC,GAAC,OAAId,EAAce,SAASD,EAAEE,OAAO5B,WAGjD,wBAAQqB,UAAU,YAAYC,QAAS,kBACrCtB,EAAQN,EAAYkB,EAAcZ,EAAQ,GAAK,MADjD,mBCtBS6B,G,MAdM,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACtB,OACE,qBAAKT,UAAU,gBAAf,SAEIS,GACA,sBAAKT,UAAU,UAAf,UACE,qBAAKA,UAAU,kBACf,4DCCKU,G,MARM,SAAC,GAAe,IAAb/B,EAAY,EAAZA,MACtB,OACE,qBAAKqB,UAAU,gBAAf,SACE,iDAAoBrB,SCmCXgC,G,MAlCU,WACvB,MAA0BjC,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,oBAAS,GAAzC,mBAAO+B,EAAP,KAAiBhC,EAAjB,KACA,EAAwCC,mBAAS,GAAjD,mBAAOF,EAAP,KAAqBoC,EAArB,KAWA,OATA3B,qBAAU,WACJwB,GACFb,IAAMiB,IATG,gFASSd,MAAK,SAAAe,GACrBlC,EAAsB,OAAbkC,EAAIC,KAAgBD,EAAIC,KAAO,GACxCH,EAA6B,OAAbE,EAAIC,KAAgBD,EAAIC,KAAO,QAGlD,CAACN,IAGF,sBAAKT,UAAU,oBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,cAAC,EAAD,CAAcS,SAAUA,MAG1B,qBAAKT,UAAU,oBAAf,SACE,cAAC,EAAD,CACExB,aAAcA,EACdC,YAAaA,MAIjB,qBAAKuB,UAAU,0BAAf,SACE,cAAC,EAAD,CAAcrB,MAAOA,WCvBdqC,EARH,WACV,OACE,qBAAKhB,UAAU,MAAf,SACE,cAAC,EAAD,OCKSiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.88505436.chunk.js","sourcesContent":["import axios from \"axios\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport './index.css';\n\nconst MAX_VALUE = process.env.REACT_APP_MAX_VALUE || 1000;\nconst putURL = 'https://interview-8e4c5-default-rtdb.firebaseio.com/front-end.json';\n\nconst Counter = ({ initialValue, setIsSaving }) => {\n  const [value, setValue] = useState();\n  const [timerID, setTimerID] = useState(null);\n  const inputField = useRef();\n\n  useEffect(() => {\n    inputField.current.style.width = (15 * MAX_VALUE.toString().length).toString() + 'px';\n    setValue(initialValue);\n  }, [initialValue]);\n\n  const onValueChange = newVal => {\n    if(isNaN(newVal)) newVal = 0;\n    if(newVal !== value && newVal <= MAX_VALUE) {\n      clearTimeout(timerID);\n      setIsSaving(true);\n      setTimerID(setTimeout(() => {\n        axios.put(putURL, { sentienta: newVal }).then(() => setIsSaving(false));\n      }, 300));\n      setValue(newVal);\n    }\n  }\n\n  return (\n    <div className='Counter'>\n      <button className='decrement' onClick={() => onValueChange(value - 1)}>-</button>\n\n      <input type='text'\n        ref={inputField}\n        value={value}\n        onChange={e => onValueChange(parseInt(e.target.value))}\n      />\n\n      <button className='increment' onClick={() => \n        value < MAX_VALUE ? onValueChange(value + 1) : null\n      }>+</button>\n    </div>\n  );\n}\n\nexport default Counter;","import React from \"react\";\nimport './index.css';\n\nconst CounterState = ({ isSaving }) => {\n  return (\n    <div className='Counter-state'>\n      {\n        isSaving &&\n        <div className='loaders'>\n          <div className='loader-circle' />\n          <p>Saving counter value</p>\n        </div>\n      }\n    </div>\n  );\n}\n\nexport default CounterState;","import React from \"react\";\nimport './index.css';\n\nconst CounterValue = ({ value }) => {\n  return (\n    <div className='Counter-value'>\n      <p>Counter value : {value}</p>\n    </div>\n  );\n}\n\nexport default CounterValue;","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Counter, CounterState, CounterValue } from \"../../components\";\nimport './index.css';\n\nconst getURL = 'https://interview-8e4c5-default-rtdb.firebaseio.com/front-end/sentienta.json';\n\nconst CounterContainer = () => {\n  const [value, setValue] = useState(1);\n  const [isSaving, setIsSaving] = useState(false);\n  const [initialValue, setInitialValue] = useState(1);\n\n  useEffect(() => {\n    if(!isSaving) {\n      axios.get(getURL).then(res => {\n        setValue(res.data !== null ? res.data : 1);\n        setInitialValue(res.data !== null ? res.data : 1);\n      });\n    }\n  }, [isSaving]);\n\n  return (\n    <div className='Counter-container'>\n      <div className='Counter-state-component'>\n        <CounterState isSaving={isSaving} />\n      </div>\n\n      <div className='Counter-component'>\n        <Counter\n          initialValue={initialValue}\n          setIsSaving={setIsSaving}\n        />\n      </div>\n\n      <div className='Counter-value-component'>\n        <CounterValue value={value} />\n      </div>\n    </div>\n  );\n}\n\nexport default CounterContainer;","import React from 'react';\nimport './App.css';\nimport { CounterContainer } from './containers';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <CounterContainer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}